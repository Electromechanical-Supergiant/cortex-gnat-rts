This package includes GNAT Ada Run Time Systems (RTSs) based
on FreeRTOS (http://www.freertos.org) and targeted at boards with
Cortex-M3, -M4, -M4F MCUs (Arduino Due from http://www.arduino.org,
the STM32F4-series evaluation boards from STMicroelectronics at
http://www.st.com).

The RTSs are all Ravenscar-based, with additional restrictions
No_Exception_Propagation, No_Finalization and
No_Recursion. No_Exception_Propagation means that exceptions can't be
caught except in their immediate scope; instead, a Last_Chance_Handler
is called.

In each case, the board support for the RTS (configuration for size
and location of Flash, RAM; clock initialization; interrupt naming) is
in $RTS/adainclude. Support for the on-chip peripherals is also
included, in Ada spec files generated by SVD2Ada
(https://github.com/AdaCore/svd2ada).

The Ada source is either original or based on FSF GCC (mainly 4.9.1,
some later releases too).

The boards supported are

(1) arduino-due for the Arduino Due.

    See arduino-due/COPYING* for licensing terms.

    On-chip peripheral support in atsam3x8e/.

    Tests in test-arduino-due/.

(2) stm32f4 for the STM32F4-DISC* board (and also the Crazyflie).

    See stm32f4/COPYING* for licensing terms.

    On-chip peripheral support in stm32f40x/.

    Tests in test-stm32f4/.

(3) stm32f429i for the STM32F429I-DISC* board.

    See stm32f429i/COPYING* for licensing terms.

    On-chip peripheral support in stm32f429x/.

    Tests in test-stm32f429i/.

The standard packages included (there are more, implementation-specific,
ones) for all RTSs are:

Ada
Ada.Containers
Ada.Containers.Bounded_Hashed_Maps
Ada.Containers.Bounded_Vectors
Ada.Exceptions
Ada.IO_Exceptions
Ada.Interrupts
Ada.Interrupts.Names
Ada.Iterator_Interfaces
Ada.Real_Time
Ada.Real_Time.Timing_Events
Ada.Streams
Ada.Synchronous_Task_Control
Ada.Tags
Ada.Task_Identification
Interfaces
Interfaces.C
Interfaces.C.Extensions
Interfaces.C.Strings
System
System.Assertions
System.Address_To_Access_Conversions
System.Storage_Elements
GNAT
GNAT.Source_Info

Additionally, stm32f4 includes all of Ada.Numerics (excluding random
number generation).

Release Notes
=============

20170725
--------

This release is motivated by a wish to support the Crazyflie code from
AdaCore in the stm32f4 RTS. However, most of the changes apply to the
other RTSs as well.

Common
......

The supported compiler is GCC 7 (NB, _not_ GNAT GPL 2017, which is
based on GCC 6).

The base is FreeRTOS 9.0.0.

Added Ada.Real_Time.Timing_Events (with limitations: there's no
finalization, so they should only be declared at library level).

SPARK annotations in Ada.Real_Time are copied from those in GCC 7.1.0.

Added Interfaces.C.Extensions.

type'Image() and object'Img are supported.

The default stack size is 4096 (the minimum size is still 768).

stm32f4
.......

Stack overflow checking is enabled in FreeRTOS.

Added Ada.Numerics.* (excluding random number generation).

In Ada.Interrupts.Names, interrupts are still named *_IRQ, but
renamings to *_Interrupt are included.

The main program can have pragma (or aspect) Priority.

Executables can be built to load at an offset from the STM32F4's
default (this is to support the Crazyflie's over-the-air bootloader).

20160522
--------

In this release,

* There is no longer any dependence on the STMicroelectronics'
  STM32Cube package.

* The support for on-chip peripherals is limited to the
  SVD2Ada-generated spec files. The AdaCore 'bareboard' software
  (currently https://github.com/AdaCore/Ada_Drivers_Library, but a
  name change is under consideration) supports the STM32 line.

* Tasking no longer requires an explicit start
  (https://sourceforge.net/p/cortex-gnat-rts/tickets/5/).

* Locking in interrupt-handling protected objects no longer inhibits
  all interrupts, only those of equal or lower priority
  (https://sourceforge.net/p/cortex-gnat-rts/tickets/18/).
